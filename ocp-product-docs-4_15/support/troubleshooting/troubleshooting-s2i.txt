Troubleshooting the Source-to-Image process

Strategies for Source-to-Image troubleshooting
Use Source-to-Image (S2I) to build reproducible, Docker-formatted container images. You can create ready-to-run images by injecting application source code into a container image and assembling a new image. The new image incorporates the base image (the builder) and built source.

To determine where in the S2I process a failure occurs, you can observe the state of the pods relating to each of the following S2I stages:

During the build configuration stage, a build pod is used to create an application container image from a base image and application source code.

During the deployment configuration stage, a deployment pod is used to deploy application pods from the application container image that was built in the build configuration stage. The deployment pod also deploys other resources such as services and routes. The deployment configuration begins after the build configuration succeeds.

After the deployment pod has started the application pods, application failures can occur within the running application pods. For instance, an application might not behave as expected even though the application pods are in a Running state. In this scenario, you can access running application pods to investigate application failures within a pod.


When troubleshooting S2I issues, follow this strategy:

Monitor build, deployment, and application pod status

Determine the stage of the S2I process where the problem occurred

Review logs corresponding to the failed stage
Gathering Source-to-Image diagnostic data
The S2I tool runs a build pod and a deployment pod in sequence. The deployment pod is responsible for deploying the application pods based on the application container image created in the build stage. Watch build, deployment and application pod status to determine where in the S2I process a failure occurs. Then, focus diagnostic data collection accordingly.

You have access to the cluster as a user with the cluster-admin role.

Your API service is still functional.

You have installed the OpenShift CLI (oc).


Watch the pod status throughout the S2I process to determine at which stage a failure occurs:

Review a failed pod's logs for errors.
Gathering application diagnostic data to investigate application failures
Application failures can occur within running application pods. In these situations, you can retrieve diagnostic information with these strategies:

Review events relating to the application pods.

Review the logs from the application pods, including application-specific log files that are not collected by the OpenShift Logging framework.

Test application functionality interactively and run diagnostic tools in an application container.


You have access to the cluster as a user with the cluster-admin role.

You have installed the OpenShift CLI (oc).


List events relating to a specific application pod. The following example retrieves events for an application pod named my-app-1-akdlg:

Review logs from an application pod:

Query specific logs within a running application pod. Logs that are sent to stdout are collected by the OpenShift Logging framework and are included in the output of the preceding command. The following query is only required for logs that are not sent to stdout.

Test application functionality interactively and run diagnostic tools, in an application container with an interactive shell.


If diagnostic binaries are not available within a container, you can run a host's diagnostic binaries within a container's namespace by using nsenter. The following example runs ip ad within a container's namespace, using the host`s ip binary.
Additional resources
See Source-to-Image (S2I) build for more details about the S2I build strategy.