Troubleshooting the distributed tracing data collection

The OpenTelemetry Collector offers multiple ways to measure its health as well as investigate data ingestion issues.
Getting the OpenTelemetry Collector logs
You can get the logs for the OpenTelemetry Collector as follows.

Set the relevant log level in the OpenTelemetry Collector custom resource (CR):

Use the oc logs command or the OpenShift console to retrieve the logs.
Exposing the metrics
The OpenTelemetry Collector exposes the metrics about the data volumes it has processed. The following metrics are for spans, although similar metrics are exposed for metrics and logs signals:


otelcol_receiver_accepted_spans
The number of spans successfully pushed into the pipeline.
otelcol_receiver_refused_spans
The number of spans that could not be pushed into the pipeline.
otelcol_exporter_sent_spans
The number of spans successfully sent to destination.
otelcol_exporter_enqueue_failed_spans
The number of spans failed to be added to the sending queue.


The operator creates a <cr-name>-collector-monitoring telemetry service that you can use to scrape the metrics endpoint.

Enable the telemetry service by adding the following lines in the OpenTelemetry Collector custom resource:

Retrieve the metrics by running the following command, which uses the port forwarding collector pod:

Access the metrics endpoint at http://localhost:8888/metrics.
Logging exporter
You can configure the logging exporter to export the collected data to the standard output.

Configure the OpenTelemetry Collector custom resource as follows:

Use the oc logs command or the OpenShift console to export the logs to the standard output.