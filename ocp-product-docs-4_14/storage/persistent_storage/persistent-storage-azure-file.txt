Persistent storage using Azure File

"Red Hat OpenShift Container Platform" supports Microsoft Azure File volumes. You can provision your "Red Hat OpenShift Container Platform" cluster with persistent storage using Azure. Some familiarity with Kubernetes and Azure is assumed.

The Kubernetes persistent volume framework allows administrators to provision a cluster with persistent storage and gives users a way to request those resources without having any knowledge of the underlying infrastructure. You can provision Azure File volumes dynamically.

Persistent volumes are not bound to a single project or namespace, and you can share them across the "Red Hat OpenShift Container Platform" cluster. Persistent volume claims are specific to a project or namespace, and can be requested by users for use in applications.

High availability of storage in the infrastructure is left to the underlying storage provider.
Azure File volumes use Server Message Block.
In future "Red Hat OpenShift Container Platform" versions, volumes provisioned using existing in-tree plugins are planned for migration to their equivalent CSI driver. CSI automatic migration should be seamless. Migration does not change how you use all existing API objects, such as persistent volumes, persistent volume claims, and storage classes. For more information about migration, see CSI automatic migration.

After full migration, in-tree plugins will eventually be removed in future versions of "Red Hat OpenShift Container Platform".
Azure Files
Create the Azure File share persistent volume claim
To create the persistent volume claim, you must first define a Secret object that contains the Azure account and key. This secret is used in the PersistentVolume definition, and will be referenced by the persistent volume claim for use in applications.

An Azure File share exists.

The credentials to access this share, specifically the storage account and
key, are available.


Create a Secret object that contains the Azure File credentials:

Create a PersistentVolume object that references the Secret object you created:

Create a PersistentVolumeClaim object that maps to the persistent volume you created:
Mount the Azure File share in a pod
After the persistent volume claim has been created, it can be used inside by an application. The following example demonstrates mounting this share inside of a pod.

A persistent volume claim exists that is mapped to the underlying Azure File share.


Create a pod that mounts the existing persistent volume claim: