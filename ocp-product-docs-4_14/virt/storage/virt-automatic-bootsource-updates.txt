Managing automatic boot source updates

You can manage automatic updates for the following boot sources:

All Red Hat boot sources

All custom boot sources

Individual Red Hat or custom boot sources


Boot sources can make virtual machine (VM) creation more accessible and efficient for users. If automatic boot source updates are enabled, the Containerized Data Importer (CDI) imports, polls, and updates the images so that they are ready to be cloned for new VMs. By default, CDI automatically updates Red Hat boot sources.
Managing Red Hat boot source updates
You can opt out of automatic updates for all system-defined boot sources by disabling the enableCommonBootImageImport feature gate. If you disable this feature gate, all DataImportCron objects are deleted. This does not remove previously imported boot source objects that store operating system images, though administrators can delete them manually.

When the enableCommonBootImageImport feature gate is disabled, DataSource objects are reset so that they no longer point to the original boot source. An administrator can manually provide a boot source by creating a new persistent volume claim (PVC) or volume snapshot for the DataSource object, then populating it with an operating system image.

Managing automatic updates for all system-defined boot sources
Disabling automatic boot source imports and updates can lower resource usage. In disconnected environments, disabling automatic boot source updates prevents CDIDataImportCronOutdated alerts from filling up logs.

To disable automatic updates for all system-defined boot sources, turn off the enableCommonBootImageImport feature gate by setting the value to false. Setting this value to true re-enables the feature gate and turns automatic updates back on.

Custom boot sources are not affected by this setting.
Toggle the feature gate for automatic boot source updates by editing the HyperConverged custom resource (CR).
Managing custom boot source updates
Custom boot sources that are not provided by OpenShift Virtualization are not controlled by the feature gate. You must manage them individually by editing the HyperConverged custom resource (CR).

You must configure a storage class. Otherwise, the cluster cannot receive automated updates for custom boot sources. See Defining a storage class for details.
Configuring a storage class for custom boot source updates
Specify a new default storage class in the HyperConverged custom resource (CR).

Boot sources are created from storage using the default storage class. If your cluster does not have a default storage class, you must define one before configuring automatic updates for custom boot sources.
Open the HyperConverged CR in your default editor by running the following command:

Define a new storage class by entering a value in the storageClassName field:

Remove the storageclass.kubernetes.io/is-default-class annotation from the current default storage class.

Set the new storage class as the default by running the following command:
Enabling automatic updates for custom boot sources
OpenShift Virtualization automatically updates system-defined boot sources by default, but does not automatically update custom boot sources. You must manually enable automatic updates by editing the HyperConverged custom resource (CR).

The cluster has a default storage class.


Open the HyperConverged CR in your default editor by running the following command:

Edit the HyperConverged CR, adding the appropriate template and boot source in the dataImportCronTemplates section. For example:

Save the file.
Enabling volume snapshot boot sources
Enable volume snapshot boot sources by setting the parameter in the StorageProfile associated with the storage class that stores operating system base images. Although DataImportCron was originally designed to maintain only PVC sources, VolumeSnapshot sources scale better than PVC sources for certain storage types.

Use volume snapshots on a storage profile that is proven to scale better when cloning from a single snapshot.
You must have access to a volume snapshot with the operating system image.

The storage must support snapshotting.


Open the storage profile object that corresponds to the storage class used to provision boot sources by running the following command:

Review the dataImportCronSourceFormat specification of the StorageProfile to confirm whether or not the VM is using PVC or volume snapshot by default.

Edit the storage profile, if needed, by updating the dataImportCronSourceFormat specification to snapshot.


Open the storage profile object that corresponds to the storage class used to provision boot sources.

Confirm that the dataImportCronSourceFormat specification of the StorageProfile is set to 'snapshot', and that any DataSource objects that the DataImportCron points to now reference volume snapshots.


You can now use these boot sources to create virtual machines.
Disabling automatic updates for a single boot source
You can disable automatic updates for an individual boot source, whether it is custom or system-defined, by editing the HyperConverged custom resource (CR).

Open the HyperConverged CR in your default editor by running the following command:

Disable automatic updates for an individual boot source by editing the spec.dataImportCronTemplates field.

Save the file.
Verifying the status of a boot source
You can determine if a boot source is system-defined or custom by viewing the HyperConverged custom resource (CR).

View the contents of the HyperConverged CR by running the following command:

Verify the status of the boot source by reviewing the status.dataImportCronTemplates.status field.