Troubleshooting
OpenShift Virtualization provides tools and logs for troubleshooting virtual machines and virtualization components.


You can troubleshoot OpenShift Virtualization components by using the tools provided in the web console or by using the oc CLI tool.
Events
"Red Hat OpenShift Container Platform" events are records of important life-cycle information and are useful for monitoring and troubleshooting virtual machine, namespace, and resource issues.

VM events: Navigate to the Events tab of the VirtualMachine details page in the web console.
Logs
You can review the following logs for troubleshooting:

Virtual machine

OpenShift Virtualization pod

Aggregated OpenShift Virtualization logs


Viewing virtual machine logs with the web console
You can view virtual machine logs with the "Red Hat OpenShift Container Platform" web console.

Navigate to Virtualization -> VirtualMachines.

Select a virtual machine to open the VirtualMachine details page.

On the Details tab, click the pod name to open the Pod details page.

Click the Logs tab to view the logs.
Viewing OpenShift Virtualization pod logs
You can view logs for OpenShift Virtualization pods by using the oc CLI tool.

You can configure the verbosity level of the logs by editing the HyperConverged custom resource (CR).

Viewing OpenShift Virtualization pod logs with the CLI
You can view logs for the OpenShift Virtualization pods by using the oc CLI tool.

View a list of pods in the OpenShift Virtualization namespace by running the following command:

View the pod log by running the following command:
Configuring OpenShift Virtualization pod log verbosity
You can configure the verbosity level of OpenShift Virtualization pod logs by editing the HyperConverged custom resource (CR).

To set log verbosity for specific components, open the HyperConverged CR in your default text editor by running the following command:

Set the log level for one or more components by editing the spec.logVerbosityConfig stanza. For example:

Apply your changes by saving and exiting the editor.
Common error messages
The following error messages might appear in OpenShift Virtualization logs:


ErrImagePull or ImagePullBackOff
Indicates an incorrect deployment configuration or problems with the images that are referenced.
Viewing aggregated OpenShift Virtualization logs with the LokiStack
You can view aggregated logs for OpenShift Virtualization pods and containers by using the LokiStack in the web console.

You deployed the LokiStack.


Navigate to Observe -> Logs in the web console.

Select application, for virt-launcher pod logs, or infrastructure, for OpenShift Virtualization control plane pods and containers, from the log type list.

Click Show Query to display the query field.

Enter the LogQL query in the query field and click Run Query to display the filtered logs.


OpenShift Virtualization LogQL queries
You can view and filter aggregated logs for OpenShift Virtualization components by running Loki Query Language (LogQL) queries on the Observe -> Logs page in the web console.

The default log type is infrastructure. The virt-launcher log type is application.

Optional: You can include or exclude strings or regular expressions by using line filter expressions.

If the query matches a large number of logs, the query might time out.

You can filter log lines to include or exclude strings or regular expressions by using line filter expressions.


{log_type=~".+"}|json
|kubernetes_labels_app_kubernetes_io_part_of="hyperconverged-cluster"
|= "error" != "timeout"
Additional resources for LokiStack and LogQL
About the LokiStack

Deploying the LokiStack on "Red Hat OpenShift Container Platform"

LogQL log queries in the Grafana documentation
Troubleshooting data volumes
You can check the Conditions and Events sections of the DataVolume object to analyze and resolve issues.

About data volume conditions and events
You can diagnose data volume issues by examining the output of the Conditions and Events sections generated by the command:

$ oc describe dv <DataVolume>
The Conditions section displays the following Types:

Bound

Running

Ready


The Events section provides the following additional information:

Type of event

Reason for logging

Source of the event

Message containing additional diagnostic information.


The output from oc describe does not always contains Events.

An event is generated when the Status, Reason, or Message changes. Both conditions and events react to changes in the state of the data volume.

For example, if you misspell the URL during an import operation, the import generates a 404 message. That message change generates an event with a reason. The output in the Conditions section is updated as well.
Analyzing data volume conditions and events
By inspecting the Conditions and Events sections generated by the describe command, you determine the state of the data volume in relation to persistent volume claims (PVCs), and whether or not an operation is actively running or completed. You might also receive messages that offer specific details about the status of the data volume, and how it came to be in its current state.

There are many different combinations of conditions. Each must be evaluated in its unique context.

Examples of various combinations follow.

Bound - A successfully bound PVC displays in this example.

Running - In this case, note that Type is Running and Status is False,
indicating that an event has occurred that caused an attempted
operation to fail, changing the Status from True to False.

Ready â€“ If Type is Ready and Status is True, then the data volume is ready
to be used, as in the following example. If the data volume is not ready to be
used, the Status is False: