Understanding Service Binding Operator

Application developers need access to backing services to build and connect workloads. Connecting workloads to backing services is always a challenge because each service provider suggests a different way to access their secrets and consume them in a workload. In addition, manual configuration and maintenance of this binding together of workloads and backing services make the process tedious, inefficient, and error-prone.

The Service Binding Operator enables application developers to easily bind workloads together with Operator-managed backing services, without any manual procedures to configure the binding connection.
Service Binding terminology
This section summarizes the basic terms used in Service Binding.


Service binding
The representation of the action of providing information about a service to a workload. Examples include establishing the exchange of credentials between a Java application and a database that it requires.
Backing service
Any service or software that the application consumes over the network as part of its normal operation. Examples include a database, a message broker, an application with REST endpoints, an event stream, an Application Performance Monitor (APM), or a Hardware Security Module (HSM).
Workload (application)
Any process running within a container. Examples include a Spring Boot application, a NodeJS Express application, or a Ruby on Rails application.
Binding data
Information about a service that you use to configure the behavior of other resources within the cluster. Examples include credentials, connection details, volume mounts, or secrets.
Binding connection
Any connection that establishes an interaction between the connected components, such as a bindable backing service and an application requiring that backing service.
About Service Binding Operator
The Service Binding Operator consists of a controller and an accompanying custom resource definition (CRD) for service binding. It manages the data plane for workloads and backing services. The Service Binding Controller reads the data made available by the control plane of backing services. Then, it projects this data to workloads according to the rules specified through the ServiceBinding resource.

As a result, the Service Binding Operator enables workloads to use backing services or external services by automatically collecting and sharing binding data with the workloads. The process involves making the backing service bindable and binding the workload and the service together.

Making an Operator-managed backing service bindable
To make a service bindable, as an Operator provider, you need to expose the binding data required by workloads to bind with the services provided by the Operator. You can provide the binding data either as annotations or as descriptors in the CRD of the Operator that manages the backing service.
Binding a workload together with a backing service
By using the Service Binding Operator, as an application developer, you need to declare the intent of establishing a binding connection. You must create a ServiceBinding CR  that references the backing service. This action triggers the Service Binding Operator to project the exposed binding data into the workload. The Service Binding Operator receives the declared intent and binds the workload together with the backing service.

The CRD of the Service Binding Operator supports the following APIs:

Service Binding with the binding.operators.coreos.com API group.

Service Binding (Spec API) with the servicebinding.io API group.


With Service Binding Operator, you can:

Bind your workloads to Operator-managed backing services.

Automate configuration of binding data.

Provide service operators with a low-touch administrative experience to provision and manage access to services.

Enrich the development lifecycle with a consistent and declarative service binding method that eliminates discrepancies in cluster environments.
Key features
Exposal of binding data from services

Workload projection

Service Binding Options

Security
API differences
The CRD of the Service Binding Operator supports the following APIs:

Service Binding with the binding.operators.coreos.com API group.

Service Binding (Spec API) with the servicebinding.io API group.


Both of these API groups have similar features, but they are not completely identical. Here is the complete list of differences between these API groups:
Additional resources
Getting started with service binding.