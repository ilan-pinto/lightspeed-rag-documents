Managing seccomp profiles

Create and manage seccomp profiles and bind them to workloads.

The Security Profiles Operator supports only Red Hat Enterprise Linux CoreOS (RHCOS) worker nodes. Red Hat Enterprise Linux (RHEL) nodes are not supported.
Creating seccomp profiles
Use the SeccompProfile object to create profiles.

SeccompProfile objects can restrict syscalls within a container, limiting the access of your application.

Create the SeccompProfile object:


The seccomp profile will be saved in /var/lib/kubelet/seccomp/operator/<namespace>/<name>.json.

An init container creates the root directory of the Security Profiles Operator to run the Operator without root group or user ID privileges. A symbolic link is created from the rootless profile storage /var/lib/openshift-security-profiles to the default seccomp root path inside of the kubelet root /var/lib/kubelet/seccomp/operator.
Applying seccomp profiles to a pod
Create a pod to apply one of the created profiles.

Create a pod object that defines a securityContext:

View the profile path of the seccompProfile.localhostProfile attribute by running the following command:

View the path to the localhost profile by running the following command:

Apply the localhostProfile output to the patch file:

Apply the profile to a Deployment object by running the following command:


Confirm the profile was applied correctly by running the following command:


Binding workloads to profiles with ProfileBindings
You can use the ProfileBinding resource to bind a security profile to the SecurityContext of a container.

To bind a pod that uses a quay.io/security-profiles-operator/test-nginx-unprivileged:1.21 image to the example SeccompProfile profile, create a ProfileBinding object in the same namespace with the pod and the SeccompProfile objects:

Label the namespace with enable-binding=true by running the following command:

Delete and re-create the pod to use the ProfileBinding object:


Confirm the pod inherits the ProfileBinding by running the following command:
Recording profiles from workloads
The Security Profiles Operator can record system calls with ProfileRecording objects, making it easier to create baseline profiles for applications.

When using the log enricher for recording seccomp profiles, verify the log enricher feature is enabled. See Additional resources for more information.

A container with privileged: true security context restraints prevents log-based recording. Privileged containers are not subject to seccomp policies, and log-based recording makes use of a special seccomp profile to record events.
Label the namespace with enable-recording=true by running the following command:

Create a ProfileRecording object containing a recorder: logs variable:

Create a workload to record:

Confirm the pod is in a Running state by entering the following command:

Confirm the enricher indicates that it receives audit logs for those containers:


Remove the pod:

Confirm the Security Profiles Operator reconciles the two seccomp profiles:


Merging per-container profile instances
By default, each container instance records into a separate profile. The Security Profiles Operator can merge the per-container profiles into a single profile. Merging profiles is useful when deploying applications using ReplicaSet or Deployment objects.

Edit a ProfileRecording object to include a mergeStrategy: containers variable:

Label the namespace by running the following command:

Create the workload with the following YAML:

To record the individual profiles, delete the deployment by running the following command:

To merge the profiles, delete the profile recording by running the following command:

To start the merge operation and generate the results profile, run the following command:

To view the permissions used by any of the containers, run the following command:



Managing security context constraints

Managing SCCs in OpenShift

Using the log enricher

About security profiles