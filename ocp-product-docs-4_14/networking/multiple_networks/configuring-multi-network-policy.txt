Configuring multi-network policy

As a cluster administrator, you can configure multi-network for additional networks. You can specify multi-network policy for SR-IOV, macvlan, and OVN-Kubernetes additional networks. Macvlan additional networks are fully supported. Other types of additional networks, such as ipvlan, are not supported.

Support for configuring multi-network policies for SR-IOV additional networks is a Technology Preview feature and is only supported with kernel network interface cards (NICs). SR-IOV is not supported for Data Plane Development Kit (DPDK) applications.

For more information about the support scope of Red Hat Technology Preview features, see Technology Preview Features Support Scope.
Configured network policies are ignored in IPv6 networks.
Differences between multi-network policy and network policy
Although the MultiNetworkPolicy API implements the NetworkPolicy API, there are several important differences:

You must use the MultiNetworkPolicy API:

You must use the multi-networkpolicy resource name when using the CLI to interact with multi-network policies. For example, you can view a multi-network policy object with the oc get multi-networkpolicy <name> command where <name> is the name of a multi-network policy.

You must specify an annotation with the name of the network attachment definition that defines the macvlan or SR-IOV additional network:
Enabling multi-network policy for the cluster
As a cluster administrator, you can enable multi-network policy support on your cluster.

Install the OpenShift CLI (oc).

Log in to the cluster with a user with cluster-admin privileges.


Create the multinetwork-enable-patch.yaml file with the following YAML:

Configure the cluster to enable multi-network policy:
Working with multi-network policy
As a cluster administrator, you can create, edit, view, and delete multi-network policies.

Prerequisites
You have enabled multi-network policy support for your cluster.
Creating a multi-network policy using the CLI
To define granular rules describing ingress or egress network traffic allowed for namespaces in your cluster, you can create a multi-network policy.

Your cluster uses a network plugin that supports NetworkPolicy objects, such as the OVN-Kubernetes network plugin or the OpenShift SDN network plugin with mode: NetworkPolicy set. This mode is the default for OpenShift SDN.

You installed the OpenShift CLI (oc).

You are logged in to the cluster with a user with cluster-admin privileges.

You are working in the namespace that the multi-network policy applies to.


Create a policy rule:

To create the multi-network policy object, enter the following command:


If you log in to the web console with cluster-admin privileges, you have a choice of creating a network policy in any namespace in the cluster directly in YAML or from a form in the web console.
Editing a multi-network policy
You can edit a multi-network policy in a namespace.

Your cluster uses a network plugin that supports NetworkPolicy objects, such as the OVN-Kubernetes network plugin or the OpenShift SDN network plugin with mode: NetworkPolicy set. This mode is the default for OpenShift SDN.

You installed the OpenShift CLI (oc).

You are logged in to the cluster with a user with cluster-admin privileges.

You are working in the namespace where the multi-network policy exists.


Optional: To list the multi-network policy objects in a namespace, enter the following command:

Edit the multi-network policy object.

Confirm that the multi-network policy object is updated.


If you log in to the web console with cluster-admin privileges, you have a choice of editing a network policy in any namespace in the cluster directly in YAML or from the policy in the web console through the Actions menu.
Viewing multi-network policies using the CLI
You can examine the multi-network policies in a namespace.

You installed the OpenShift CLI (oc).

You are logged in to the cluster with a user with cluster-admin privileges.

You are working in the namespace where the multi-network policy exists.


List multi-network policies in a namespace:


If you log in to the web console with cluster-admin privileges, you have a choice of viewing a network policy in any namespace in the cluster directly in YAML or from a form in the web console.
Deleting a multi-network policy using the CLI
You can delete a multi-network policy in a namespace.

Your cluster uses a network plugin that supports NetworkPolicy objects, such as the OVN-Kubernetes network plugin or the OpenShift SDN network plugin with mode: NetworkPolicy set. This mode is the default for OpenShift SDN.

You installed the OpenShift CLI (oc).

You are logged in to the cluster with a user with cluster-admin privileges.

You are working in the namespace where the multi-network policy exists.


To delete a multi-network policy object, enter the following command:


If you log in to the web console with cluster-admin privileges, you have a choice of deleting a network policy in any namespace in the cluster directly in YAML or from the policy in the web console through the Actions menu.
Creating a default deny all multi-network policy
This is a fundamental policy, blocking all cross-pod networking other than network traffic allowed by the configuration of other deployed network policies. This procedure enforces a default deny-by-default policy.

If you log in with a user with the cluster-admin role, then you can create a network policy in any namespace in the cluster.
Your cluster uses a network plugin that supports NetworkPolicy objects, such as the OVN-Kubernetes network plugin or the OpenShift SDN network plugin with mode: NetworkPolicy set. This mode is the default for OpenShift SDN.

You installed the OpenShift CLI (oc).

You are logged in to the cluster with a user with cluster-admin privileges.

You are working in the namespace that the multi-network policy applies to.


Create the following YAML that defines a deny-by-default policy to deny ingress from all pods in all namespaces. Save the YAML in the deny-by-default.yaml file:

Apply the policy by entering the following command:
Creating a multi-network policy to allow traffic from external clients
With the deny-by-default policy in place you can proceed to configure a policy that allows traffic from external clients to a pod with the label app=web.

If you log in with a user with the cluster-admin role, then you can create a network policy in any namespace in the cluster.
Follow this procedure to configure a policy that allows external service from the public Internet directly or by using a Load Balancer to access the pod. Traffic is only allowed to a pod with the label app=web.

Your cluster uses a network plugin that supports NetworkPolicy objects, such as the OVN-Kubernetes network plugin or the OpenShift SDN network plugin with mode: NetworkPolicy set. This mode is the default for OpenShift SDN.

You installed the OpenShift CLI (oc).

You are logged in to the cluster with a user with cluster-admin privileges.

You are working in the namespace that the multi-network policy applies to.


Create a policy that allows traffic from the public Internet directly or by using a load balancer to access the pod. Save the YAML in the web-allow-external.yaml file:

Apply the policy by entering the following command:


This policy allows traffic from all resources, including external traffic as illustrated in the following diagram:
Creating a multi-network policy allowing traffic to an application from all namespaces
If you log in with a user with the cluster-admin role, then you can create a network policy in any namespace in the cluster.
Follow this procedure to configure a policy that allows traffic from all pods in all namespaces to a particular application.

Your cluster uses a network plugin that supports NetworkPolicy objects, such as the OVN-Kubernetes network plugin or the OpenShift SDN network plugin with mode: NetworkPolicy set. This mode is the default for OpenShift SDN.

You installed the OpenShift CLI (oc).

You are logged in to the cluster with a user with cluster-admin privileges.

You are working in the namespace that the multi-network policy applies to.


Create a policy that allows traffic from all pods in all namespaces to a particular application. Save the YAML in the web-allow-all-namespaces.yaml file:

Apply the policy by entering the following command:


Start a web service in the default namespace by entering the following command:

Run the following command to deploy an alpine image in the secondary namespace and to start a shell:

Run the following command in the shell and observe that the request is allowed:
Creating a multi-network policy allowing traffic to an application from a namespace
If you log in with a user with the cluster-admin role, then you can create a network policy in any namespace in the cluster.
Follow this procedure to configure a policy that allows traffic to a pod with the label app=web from a particular namespace. You might want to do this to:

Restrict traffic to a production database only to namespaces where production workloads are deployed.

Enable monitoring tools deployed to a particular namespace to scrape metrics from the current namespace.


Your cluster uses a network plugin that supports NetworkPolicy objects, such as the OVN-Kubernetes network plugin or the OpenShift SDN network plugin with mode: NetworkPolicy set. This mode is the default for OpenShift SDN.

You installed the OpenShift CLI (oc).

You are logged in to the cluster with a user with cluster-admin privileges.

You are working in the namespace that the multi-network policy applies to.


Create a policy that allows traffic from all pods in a particular namespaces with a label purpose=production. Save the YAML in the web-allow-prod.yaml file:

Apply the policy by entering the following command:


Start a web service in the default namespace by entering the following command:

Run the following command to create the prod namespace:

Run the following command to label the prod namespace:

Run the following command to create the dev namespace:

Run the following command to label the dev namespace:

Run the following command to deploy an alpine image in the dev namespace and to start a shell:

Run the following command in the shell and observe that the request is blocked:

Run the following command to deploy an alpine image in the prod namespace and start a shell:

Run the following command in the shell and observe that the request is allowed:
Additional resources
About network policy

Understanding multiple networks

Configuring a macvlan network

Configuring an SR-IOV network device