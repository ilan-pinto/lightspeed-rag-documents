Installing a cluster on OpenStack on your own infrastructure

In "Red Hat OpenShift Container Platform" version {product-version}, you can install a cluster on Red Hat OpenStack Platform (RHOSP) that runs on user-provisioned infrastructure.

Using your own infrastructure allows you to integrate your cluster with existing infrastructure and modifications. The process requires more labor on your part than installer-provisioned installations, because you must create all RHOSP resources, like Nova servers, Neutron ports, and security groups. However, Red Hat provides Ansible playbooks to help you in the deployment process.
Prerequisites
You reviewed details about the "Red Hat OpenShift Container Platform" installation and update processes.

You read the documentation on selecting a cluster installation method and preparing it for users.

You verified that "Red Hat OpenShift Container Platform" {product-version} is compatible with your RHOSP version by using the Supported platforms for OpenShift clusters section. You can also compare platform support across different versions by viewing the "Red Hat OpenShift Container Platform" on RHOSP support matrix.

You have an RHOSP account where you want to install "Red Hat OpenShift Container Platform".

You understand performance and scalability practices for cluster scaling, control plane sizing, and etcd. For more information, see Recommended practices for scaling the cluster.

On the machine from which you run the installation program, you have:
Internet access for "Red Hat OpenShift Container Platform"
In "Red Hat OpenShift Container Platform" {product-version}, you require access to the internet to install your cluster.

You must have internet access to:

Access OpenShift Cluster Manager Hybrid Cloud Console to download the installation program and perform subscription management. If the cluster has internet access and you do not disable Telemetry, that service automatically entitles your cluster.

Access Quay.io to obtain the packages that are required to install your cluster.

Obtain the packages that are required to perform cluster updates.
Resource guidelines for installing "Red Hat OpenShift Container Platform" on RHOSP
To support an "Red Hat OpenShift Container Platform" installation, your Red Hat OpenStack Platform (RHOSP) quota must meet the following requirements:


A cluster might function with fewer than recommended resources, but its performance is not guaranteed.

If RHOSP object storage (Swift) is available and operated by a user account with the swiftoperator role, it is used as the default backend for the "Red Hat OpenShift Container Platform" image registry. In this case, the volume storage requirement is 175 GB. Swift space requirements vary depending on the size of the image registry.
By default, your security group and security group rule quotas might be low. If you encounter problems, run openstack quota set --secgroups 3 --secgroup-rules 60 <project> as an administrator to increase them.
An "Red Hat OpenShift Container Platform" deployment comprises control plane machines, compute machines, and a bootstrap machine.

Control plane machines
By default, the "Red Hat OpenShift Container Platform" installation process creates three control plane machines.

Each machine requires:

An instance from the RHOSP quota

A port from the RHOSP quota

A flavor with at least 16 GB memory and 4 vCPUs

At least 100 GB storage space from the RHOSP quota
Compute machines
By default, the "Red Hat OpenShift Container Platform" installation process creates three compute machines.

Each machine requires:

An instance from the RHOSP quota

A port from the RHOSP quota

A flavor with at least 8 GB memory and 2 vCPUs

At least 100 GB storage space from the RHOSP quota


Compute machines host the applications that you run on "Red Hat OpenShift Container Platform"; aim to run as many as you can.
Bootstrap machine
During installation, a bootstrap machine is temporarily provisioned to stand up the control plane. After the production control plane is ready, the bootstrap machine is deprovisioned.

The bootstrap machine requires:

An instance from the RHOSP quota

A port from the RHOSP quota

A flavor with at least 16 GB memory and 4 vCPUs

At least 100 GB storage space from the RHOSP quota
Downloading playbook dependencies
The Ansible playbooks that simplify the installation process on user-provisioned infrastructure require several Python modules. On the machine where you will run the installer, add the modules' repositories and then download them.

These instructions assume that you are using Red Hat Enterprise Linux (RHEL) 8.
Python 3 is installed on your machine.


On a command line, add the repositories:

Install the modules:

Ensure that the python command points to python3:
Downloading the installation playbooks
Download Ansible playbooks that you can use to install "Red Hat OpenShift Container Platform" on your own Red Hat OpenStack Platform (RHOSP) infrastructure.

The curl command-line tool is available on your machine.


To download the playbooks to your working directory, run the following script from a command line:


The playbooks are downloaded to your machine.

During the installation process, you can modify the playbooks to configure your deployment.

Retain all playbooks for the life of your cluster. You must have the playbooks to remove your "Red Hat OpenShift Container Platform" cluster from RHOSP.
You must match any edits you make in the bootstrap.yaml, compute-nodes.yaml, control-plane.yaml, network.yaml, and security-groups.yaml files to the corresponding playbooks that are prefixed with down-. For example, edits to the bootstrap.yaml file must be reflected in the down-bootstrap.yaml file, too. If you do not edit both files, the supported cluster removal process will fail.
Obtaining the installation program
Before you install "Red Hat OpenShift Container Platform", download the installation file on  the host you are using for installation.

You have a computer that runs Linux or macOS, with 500 MB of local disk space.


Access the Infrastructure Provider page on the OpenShift Cluster Manager site. If you have a Red Hat account, log in with your credentials. If you do not, create an account.

Select your infrastructure provider.

Navigate to the page for your installation type, download the installation program that corresponds with your host operating system and architecture, and place the file in the directory where you will store the installation configuration files.

Extract the installation program. For example, on a computer that uses a Linux
operating system, run the following command:

Download your installation pull secret from the Red Hat OpenShift Cluster Manager. This pull secret allows you to authenticate with the services that are provided by the included authorities, including Quay.io, which serves the container images for "Red Hat OpenShift Container Platform" components.
Generating a key pair for cluster node SSH access
During an "Red Hat OpenShift Container Platform" installation, you can provide an SSH public key to the installation program. The key is passed to the Red Hat Enterprise Linux CoreOS (RHCOS) nodes through their Ignition config files and is used to authenticate SSH access to the nodes. The key is added to the ~/.ssh/authorized_keys list for the core user on each node, which enables password-less authentication.

After the key is passed to the nodes, you can use the key pair to SSH in to the RHCOS nodes as the user core. To access the nodes through SSH, the private key identity must be managed by SSH for your local user.

If you want to SSH in to your cluster nodes to perform installation debugging or disaster recovery, you must provide the SSH public key during the installation process. The ./openshift-install gather command also requires the SSH public key to be in place on the cluster nodes.

Do not skip this procedure in production environments, where disaster recovery and debugging is required.
You must use a local key, not one that you configured with platform-specific approaches such as AWS key pairs.
If you do not have an existing SSH key pair on your local machine to use for authentication onto your cluster nodes, create one. For example, on a computer that uses a Linux operating system, run the following command:

View the public SSH key:

Add the SSH private key identity to the SSH agent for your local user, if it has not already been added. SSH agent management of the key is required for password-less SSH authentication onto your cluster nodes, or if you want to use the ./openshift-install gather command.

Add your SSH private key to the ssh-agent:


When you install "Red Hat OpenShift Container Platform", provide the SSH public key to the installation program.
Creating the Red Hat Enterprise Linux CoreOS (RHCOS) image
The "Red Hat OpenShift Container Platform" installation program requires that a Red Hat Enterprise Linux CoreOS (RHCOS) image be present in the Red Hat OpenStack Platform (RHOSP) cluster. Retrieve the latest RHCOS image, then upload it using the RHOSP CLI.

The RHOSP CLI is installed.


Log in to the Red Hat Customer Portal's Product Downloads page.

Under Version, select the most recent release of "Red Hat OpenShift Container Platform" {product-version} for Red Hat Enterprise Linux (RHEL) 8.

Download the Red Hat Enterprise Linux CoreOS (RHCOS) - OpenStack Image (QCOW).

Decompress the image.

From the image that you downloaded, create an image that is named rhcos in your cluster by using the RHOSP CLI:


After you upload the image to RHOSP, it is usable in the installation process.
Verifying external network access
The "Red Hat OpenShift Container Platform" installation process requires external network access. You must provide an external network value to it, or deployment fails. Before you begin the process, verify that a network with the external router type exists in Red Hat OpenStack Platform (RHOSP).

On RHOSP, the NeutronDhcpAgentDnsmasqDnsServers parameter must be configured to allow DHCP agents to forward instances' DNS queries. One way to set this parameter is to:


Using the RHOSP CLI, verify the name and ID of the 'External' network:


A network with an external router type appears in the network list. If at least one does not, see Creating a default floating IP network and Creating a default provider network.

If the Neutron trunk service plugin is enabled, a trunk port is created by default. For more information, see Neutron trunk port.
Enabling access to the environment
At deployment, all "Red Hat OpenShift Container Platform" machines are created in a Red Hat OpenStack Platform (RHOSP)-tenant network. Therefore, they are not accessible directly in most RHOSP deployments.

You can configure "Red Hat OpenShift Container Platform" API and application access by using floating IP addresses (FIPs) during installation. You can also complete an installation without configuring FIPs, but the installer will not configure a way to reach the API or applications externally.

Enabling access with floating IP addresses
Create floating IP (FIP) addresses for external access to the "Red Hat OpenShift Container Platform" API, cluster applications, and the bootstrap process.

Using the Red Hat OpenStack Platform (RHOSP) CLI, create the API FIP:

Using the Red Hat OpenStack Platform (RHOSP) CLI, create the apps, or Ingress, FIP:

By using the Red Hat OpenStack Platform (RHOSP) CLI, create the bootstrap FIP:

Add records that follow these patterns to your DNS server for the API and Ingress FIPs:

Add the FIPs to the
inventory.yaml
file as the values of the following
variables:


If you use these values, you must also enter an external network as the value of the os_external_network variable in the inventory.yaml file.

You can make "Red Hat OpenShift Container Platform" resources available outside of the cluster by assigning a floating IP address and updating your firewall configuration.
Completing installation without floating IP addresses
You can install "Red Hat OpenShift Container Platform" on Red Hat OpenStack Platform (RHOSP) without providing floating IP addresses.

In the inventory.yaml file, do not define the following variables:

os_api_fip

os_bootstrap_fip

os_ingress_fip


If you cannot provide an external network, you can also leave os_external_network blank. If you do not provide a value for os_external_network, a router is not created for you, and, without additional action, the installer will fail to retrieve an image from Glance. Later in the installation process, when you create network resources, you must configure external connectivity on your own.

If you run the installer with the wait-for command from a system that cannot reach the cluster API due to a lack of floating IP addresses or name resolution, installation fails. To prevent installation failure in these cases, you can use a proxy network or run the installer from a system that is on the same network as your machines.

You can enable name resolution by creating DNS records for the API and Ingress ports. For example:

api.<cluster_name>.<base_domain>.  IN  A  <api_port_IP>
*.apps.<cluster_name>.<base_domain>. IN  A <ingress_port_IP>
If you do not control the DNS server, you can add the record to your /etc/hosts file. This action makes the API accessible to only you, which is not suitable for production deployment but does allow installation for development and testing.
Defining parameters for the installation program
The "Red Hat OpenShift Container Platform" installation program relies on a file that is called clouds.yaml. The file describes Red Hat OpenStack Platform (RHOSP) configuration parameters, including the project name, log in information, and authorization service URLs.

Create the clouds.yaml file:

If your RHOSP installation uses self-signed certificate authority (CA) certificates for endpoint authentication:

Place the clouds.yaml file in one of the following locations:
Creating the installation configuration file
You can customize the "Red Hat OpenShift Container Platform" cluster you install on Red Hat OpenStack Platform (RHOSP).

You have the "Red Hat OpenShift Container Platform" installation program and the pull secret for your cluster.


Create the install-config.yaml file.

Modify the install-config.yaml file. You can find more information about the available parameters in the "Installation configuration parameters" section.

Back up the install-config.yaml file so that you can use
it to install multiple clusters.


You now have the file install-config.yaml in the directory that you specified.

Installation configuration parameters for OpenStack


Custom subnets in RHOSP deployments
Optionally, you can deploy a cluster on a Red Hat OpenStack Platform (RHOSP) subnet of your choice. The subnet's GUID is passed as the value of platform.openstack.machinesSubnet in the install-config.yaml file.

This subnet is used as the cluster's primary subnet. By default, nodes and ports are created on it. You can create nodes and ports on a different RHOSP subnet by setting the value of the platform.openstack.machinesSubnet property to the subnet's UUID.

Before you run the "Red Hat OpenShift Container Platform" installer with a custom subnet, verify that your configuration meets the following requirements:

The subnet that is used by platform.openstack.machinesSubnet has DHCP enabled.

The CIDR of platform.openstack.machinesSubnet matches the CIDR of networking.machineNetwork.

The installation program user has permission to create ports on this network, including ports with fixed IP addresses.


Clusters that use custom subnets have the following limitations:

If you plan to install a cluster that uses floating IP addresses, the platform.openstack.machinesSubnet subnet must be attached to a router that is connected to the externalNetwork network.

If the platform.openstack.machinesSubnet value is set in the install-config.yaml file, the installation program does not create a private network or subnet for your RHOSP machines.

You cannot use the platform.openstack.externalDNS property at the same time as a custom subnet. To add DNS to a cluster that uses a custom subnet, configure DNS on the RHOSP network.


By default, the API VIP takes x.x.x.5 and the Ingress VIP takes x.x.x.7 from your network's CIDR block. To override these default values, set values for platform.openstack.apiVIPs and platform.openstack.ingressVIPs that are outside of the DHCP allocation pool.
The CIDR ranges for networks are not adjustable after cluster installation. Red Hat does not provide direct guidance on determining the range during cluster installation because it requires careful consideration of the number of created pods per namespace.
Sample customized install-config.yaml file for RHOSP
This sample install-config.yaml demonstrates all of the possible Red Hat OpenStack Platform (RHOSP) customization options.

This sample file is provided for reference only. You must obtain your
install-config.yaml file by using the installation program.
apiVersion: v1
baseDomain: example.com
controlPlane:
  name: master
  platform: {}
  replicas: 3
compute:
- name: worker
  platform:
    openstack:
      type: ml.large
  replicas: 3
metadata:
  name: example
networking:
  clusterNetwork:
  - cidr: 10.128.0.0/14
    hostPrefix: 23
  machineNetwork:
  - cidr: 10.0.0.0/16
  serviceNetwork:
  - 172.30.0.0/16
  networkType: OVNKubernetes
platform:
  openstack:
    cloud: mycloud
    externalNetwork: external
    computeFlavor: m1.xlarge
    apiFloatingIP: 128.0.0.1
fips: false
pullSecret: '{"auths": ...}'
sshKey: ssh-ed25519 AAAA...
Setting a custom subnet for machines
The IP range that the installation program uses by default might not match the Neutron subnet that you create when you install "Red Hat OpenShift Container Platform". If necessary, update the CIDR value for new machines by editing the installation configuration file.

You have the install-config.yaml file that was generated by the "Red Hat OpenShift Container Platform" installation program.


On a command line, browse to the directory that contains install-config.yaml.

From that directory, either run a script to edit the install-config.yaml file or update the file manually:
Emptying compute machine pools
To proceed with an installation that uses your own infrastructure, set the number of compute machines in the installation configuration file to zero. Later, you create these machines manually.

You have the install-config.yaml file that was generated by the "Red Hat OpenShift Container Platform" installation program.


On a command line, browse to the directory that contains install-config.yaml.

From that directory, either run a script to edit the install-config.yaml file or update the file manually:
Cluster deployment on RHOSP provider networks
You can deploy your "Red Hat OpenShift Container Platform" clusters on Red Hat OpenStack Platform (RHOSP) with a primary network interface on a provider network. Provider networks are commonly used to give projects direct access to a public network that can be used to reach the internet. You can also share provider networks among projects as part of the network creation process.

RHOSP provider networks map directly to an existing physical network in the data center. A RHOSP administrator must create them.

In the following example, "Red Hat OpenShift Container Platform" workloads are connected to a data center by using a provider network:


"Red Hat OpenShift Container Platform" clusters that are installed on provider networks do not require tenant networks or floating IP addresses. The installer does not create these resources during installation.

Example provider network types include flat (untagged) and VLAN (802.1Q tagged).

A cluster can support as many provider network connections as the network type allows. For example, VLAN networks typically support up to 4096 connections.
You can learn more about provider and tenant networks in the RHOSP documentation.

RHOSP provider network requirements for cluster installation
Before you install an "Red Hat OpenShift Container Platform" cluster, your Red Hat OpenStack Platform (RHOSP) deployment and provider network must meet a number of conditions:

The RHOSP networking service (Neutron) is enabled and accessible through the RHOSP networking API.

The RHOSP networking service has the port security and allowed address pairs extensions enabled.

The provider network can be shared with other tenants.

The RHOSP project that you use to install the cluster must own the provider network, as well as an appropriate subnet.

Verify that the provider network can reach the RHOSP metadata service IP address, which is 169.254.169.254 by default.

Optional: To secure the network, create role-based access control (RBAC) rules that limit network access to a single project.
Deploying a cluster that has a primary interface on a provider network
You can deploy an "Red Hat OpenShift Container Platform" cluster that has its primary network interface on an Red Hat OpenStack Platform (RHOSP) provider network.

Your Red Hat OpenStack Platform (RHOSP) deployment is configured as described by "RHOSP provider network requirements for cluster installation".


In a text editor, open the install-config.yaml file.

Set the value of the platform.openstack.apiVIPs property to the IP address for the API VIP.

Set the value of the platform.openstack.ingressVIPs property to the IP address for the Ingress VIP.

Set the value of the platform.openstack.machinesSubnet property to the UUID of the provider network subnet.

Set the value of the networking.machineNetwork.cidr property to the CIDR block of the provider network subnet.


The platform.openstack.apiVIPs and platform.openstack.ingressVIPs properties must both be unassigned IP addresses from the networking.machineNetwork.cidr block.
        ...
        platform:
          openstack:
            apiVIPs: 1
              - 192.0.2.13
            ingressVIPs: 1
              - 192.0.2.23
            machinesSubnet: fa806b2f-ac49-4bce-b9db-124bc64209bf
            # ...
        networking:
          machineNetwork:
          - cidr: 192.0.2.0/24
In "Red Hat OpenShift Container Platform" 4.12 and later, the apiVIP and ingressVIP configuration settings are deprecated. Instead, use a list format to enter values in the apiVIPs and ingressVIPs configuration settings.


You cannot set the platform.openstack.externalNetwork or platform.openstack.externalDNS parameters while using a provider network for the primary network interface.
When you deploy the cluster, the installer uses the install-config.yaml file to deploy the cluster on the provider network.

You can add additional networks, including provider networks, to the platform.openstack.additionalNetworkIDs list.

After you deploy your cluster, you can attach pods to additional networks. For more information, see Understanding multiple networks.
Creating the Kubernetes manifest and Ignition config files
Because you must modify some cluster definition files and manually start the cluster machines, you must generate the Kubernetes manifest and Ignition config files that the cluster needs to configure the machines.

The installation configuration file transforms into the Kubernetes manifests. The manifests wrap into the Ignition configuration files, which are later used to configure the cluster machines.

The Ignition config files that the "Red Hat OpenShift Container Platform" installation program generates contain certificates that expire after 24 hours, which are then renewed at that time. If the cluster is shut down before renewing the certificates and the cluster is later restarted after the 24 hours have elapsed, the cluster automatically recovers the expired certificates. The exception is that you must manually approve the pending node-bootstrapper certificate signing requests (CSRs) to recover kubelet certificates. See the documentation for Recovering from expired control plane certificates for more information.

It is recommended that you use Ignition config files within 12 hours after they are generated because the 24-hour certificate rotates from 16 to 22 hours after the cluster is installed. By using the Ignition config files within 12 hours, you can avoid installation failure if the certificate update runs during installation.
You obtained the "Red Hat OpenShift Container Platform" installation program.

You created the install-config.yaml installation configuration file.


Change to the directory that contains the "Red Hat OpenShift Container Platform" installation program and generate the Kubernetes manifests for the cluster:

Remove the Kubernetes manifest files that define the control plane machines, compute machine sets, and control plane machine sets:

Check that the mastersSchedulable parameter in the <installation_directory>/manifests/cluster-scheduler-02-config.yml Kubernetes manifest file is set to false. This setting prevents pods from being scheduled on the control plane machines:

To create the Ignition configuration files, run the following command from the directory that contains the installation program:

Export the metadata file's infraID key as an environment variable:


Extract the infraID key from metadata.json and use it as a prefix for all of the RHOSP resources that you create. By doing so, you avoid name conflicts when making multiple deployments in the same project.
Preparing the bootstrap Ignition files
The "Red Hat OpenShift Container Platform" installation process relies on bootstrap machines that are created from a bootstrap Ignition configuration file.

Edit the file and upload it. Then, create a secondary bootstrap Ignition configuration file that Red Hat OpenStack Platform (RHOSP) uses to download the primary file.

You have the bootstrap Ignition file that the installer program generates, bootstrap.ign.

The infrastructure ID from the installer's metadata file is set as an environment variable ($INFRA_ID).

You have an HTTP(S)-accessible way to store the bootstrap Ignition file.


Run the following Python script. The script modifies the bootstrap Ignition file to set the hostname and, if available, CA certificate file when it runs:

Using the RHOSP CLI, create an image that uses the bootstrap Ignition file:

Get the image's details:

Retrieve the image service's public address:

Combine the public address with the image file value and save the result as the storage location. The location follows the pattern <image_service_public_URL>/v2/images/<image_ID>/file.

Generate an auth token and save the token ID:

Insert the following content into a file called $INFRA_ID-bootstrap-ignition.json and edit the placeholders to match your own values:

Save the secondary Ignition config file.


The bootstrap Ignition data will be passed to RHOSP during installation.

The bootstrap Ignition file contains sensitive information, like clouds.yaml credentials. Ensure that you store it in a secure place, and delete it after you complete the installation process.
Creating control plane Ignition config files on RHOSP
Installing "Red Hat OpenShift Container Platform" on Red Hat OpenStack Platform (RHOSP) on your own infrastructure requires control plane Ignition config files. You must create multiple config files.

As with the bootstrap Ignition configuration, you must explicitly define a hostname for each control plane machine.
The infrastructure ID from the installation program's metadata file is set as an environment variable ($INFRA_ID).


On a command line, run the following Python script:
Creating network resources on RHOSP
Create the network resources that an "Red Hat OpenShift Container Platform" on Red Hat OpenStack Platform (RHOSP) installation on your own infrastructure requires. To save time, run supplied Ansible playbooks that generate security groups, networks, subnets, routers, and ports.

Python 3 is installed on your machine.

You downloaded the modules in "Downloading playbook dependencies".

You downloaded the playbooks in "Downloading the installation playbooks".


Optional: Add an external network value to the inventory.yaml playbook:

Optional: Add external network and floating IP (FIP) address values to the inventory.yaml playbook:

On a command line, create security groups by running the security-groups.yaml playbook:

On a command line, create a network, subnet, and router by running the network.yaml playbook:

Optional: If you want to control the default resolvers that Nova servers use, run the RHOSP CLI command:


Optionally, you can use the inventory.yaml file that you created to customize your installation. For example, you can deploy a cluster that uses bare metal machines.

Deploying a cluster with bare metal machines
If you want your cluster to use bare metal machines, modify the inventory.yaml file. Your cluster can have both control plane and compute machines running on bare metal, or just compute machines.

Bare-metal compute machines are not supported on clusters that use Kuryr.

Be sure that your install-config.yaml file reflects whether the RHOSP network that you use for bare metal workers supports floating IP addresses or not.
The RHOSP Bare Metal service (Ironic) is enabled and accessible via the RHOSP Compute API.

Bare metal is available as a RHOSP flavor.

If your cluster runs on an RHOSP version that is more than 16.1.6 and less than 16.2.4, bare metal workers do not function due to a known issue that causes the metadata service to be unavailable for services on "Red Hat OpenShift Container Platform" nodes.

The RHOSP network supports both VM and bare metal server attachment.

Your network configuration does not rely on a provider network. Provider networks are not supported.

If you want to deploy the machines on a pre-existing network, a RHOSP subnet is provisioned.

If you want to deploy the machines on an installer-provisioned network, the RHOSP Bare Metal service (Ironic) is able to listen for and interact with Preboot eXecution Environment (PXE) boot machines that run on tenant networks.

You created an inventory.yaml file as part of the "Red Hat OpenShift Container Platform" installation process.


In the inventory.yaml file, edit the flavors for machines:


Use the updated inventory.yaml file to complete the installation process. Machines that are created during deployment use the flavor that you added to the file.

The installer may time out while waiting for bare metal machines to boot.

If the installer times out, restart and then complete the deployment by using the wait-for command of the installer. For example:

$ ./openshift-install wait-for install-complete --log-level debug
Creating the bootstrap machine on RHOSP
Create a bootstrap machine and give it the network access it needs to run on Red Hat OpenStack Platform (RHOSP). Red Hat provides an Ansible playbook that you run to simplify this process.

You downloaded the modules in "Downloading playbook dependencies".

You downloaded the playbooks in "Downloading the installation playbooks".

The inventory.yaml, common.yaml, and bootstrap.yaml Ansible playbooks are in a common directory.

The metadata.json file that the installation program created is in the same directory as the Ansible playbooks.


On a command line, change the working directory to the location of the playbooks.

On a command line, run the bootstrap.yaml playbook:

After the bootstrap server is active, view the logs to verify that the Ignition files were received:
Creating the control plane machines on RHOSP
Create three control plane machines by using the Ignition config files that you generated. Red Hat provides an Ansible playbook that you run to simplify this process.

You downloaded the modules in "Downloading playbook dependencies".

You downloaded the playbooks in "Downloading the installation playbooks".

The infrastructure ID from the installation program's metadata file is set as an environment variable ($INFRA_ID).

The inventory.yaml, common.yaml, and control-plane.yaml Ansible playbooks are in a common directory.

You have the three Ignition files that were created in "Creating control plane Ignition config files".


On a command line, change the working directory to the location of the playbooks.

If the control plane Ignition config files aren't already in your working directory, copy them into it.

On a command line, run the control-plane.yaml playbook:

Run the following command to monitor the bootstrapping process:
Logging in to the cluster by using the CLI
You can log in to your cluster as a default system user by exporting the cluster kubeconfig file. The kubeconfig file contains information about the cluster that is used by the CLI to connect a client to the correct cluster and API server. The file is specific to a cluster and is created during "Red Hat OpenShift Container Platform" installation.

You deployed an "Red Hat OpenShift Container Platform" cluster.

You installed the oc CLI.


Export the kubeadmin credentials:

Verify you can run oc commands successfully using the exported configuration:
Deleting bootstrap resources from RHOSP
Delete the bootstrap resources that you no longer need.

You downloaded the modules in "Downloading playbook dependencies".

You downloaded the playbooks in "Downloading the installation playbooks".

The inventory.yaml, common.yaml, and down-bootstrap.yaml Ansible playbooks are in a common directory.

The control plane machines are running.


On a command line, change the working directory to the location of the playbooks.

On a command line, run the down-bootstrap.yaml playbook:


The bootstrap port, server, and floating IP address are deleted.

If you did not disable the bootstrap Ignition file URL earlier, do so now.
Creating compute machines on RHOSP
After standing up the control plane, create compute machines. Red Hat provides an Ansible playbook that you run to simplify this process.

You downloaded the modules in "Downloading playbook dependencies".

You downloaded the playbooks in "Downloading the installation playbooks".

The inventory.yaml, common.yaml, and compute-nodes.yaml Ansible playbooks are in a common directory.

The metadata.json file that the installation program created is in the same directory as the Ansible playbooks.

The control plane is active.


On a command line, change the working directory to the location of the playbooks.

On a command line, run the playbook:


Approve the certificate signing requests for the machines.
Approving the certificate signing requests for your machines
When you add machines to a cluster, two pending certificate signing requests (CSRs) are generated for each machine that you added. You must confirm that these CSRs are approved or, if necessary, approve them yourself. The client requests must be approved first, followed by the server requests.

You added machines to your cluster.


Confirm that the cluster recognizes the machines:

Review the pending CSRs and ensure that you see the client requests with the Pending or Approved status for each machine that you added to the cluster:

If the CSRs were not approved, after all of the pending CSRs for the machines you added are in Pending status, approve the CSRs for your cluster machines:

Now that your client requests are approved, you must review the server requests for each machine that you added to the cluster:

If the remaining CSRs are not approved, and are in the Pending status, approve the CSRs for your cluster machines:

After all client and server CSRs have been approved, the machines have the Ready status. Verify this by running the following command:


For more information on CSRs, see Certificate Signing Requests.
Verifying a successful installation
Verify that the "Red Hat OpenShift Container Platform" installation is complete.

You have the installation program (openshift-install)


On a command line, enter:


The program outputs the console URL, as well as the administrator's login information.
Telemetry access for "Red Hat OpenShift Container Platform"
In "Red Hat OpenShift Container Platform" {product-version}, the Telemetry service, which runs by default to provide metrics about cluster health and the success of updates, requires internet access. If your cluster is connected to the internet, Telemetry runs automatically, and your cluster is registered to OpenShift Cluster Manager Hybrid Cloud Console.

After you confirm that your OpenShift Cluster Manager Hybrid Cloud Console inventory is correct, either maintained automatically by Telemetry or manually by using OpenShift Cluster Manager, use subscription watch to track your "Red Hat OpenShift Container Platform" subscriptions at the account or multi-cluster level.

See About remote health monitoring for more information about the Telemetry service
Next steps
Customize your cluster.

If necessary, you can
opt out of remote health reporting.

If you need to enable external access to node ports, configure ingress cluster traffic by using a node port.

If you did not configure RHOSP to accept application traffic over floating IP addresses, configure RHOSP access with floating IP addresses.