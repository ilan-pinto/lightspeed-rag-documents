About advertising for the IP address pools

You can configure MetalLB so that the IP address is advertised with layer 2 protocols, the BGP protocol, or both. With layer 2, MetalLB provides a fault-tolerant external IP address. With BGP, MetalLB provides fault-tolerance for the external IP address and load balancing.

MetalLB supports advertising using L2 and BGP for the same set of IP addresses.

MetalLB provides the flexibility to assign address pools to specific BGP peers effectively to a subset of nodes on the network. This allows for more complex configurations, for example facilitating the isolation of nodes or the segmentation of the network.
About the BGPAdvertisement custom resource
The fields for the BGPAdvertisements object are defined in the following table:
Configuring MetalLB with a BGP advertisement and a basic use case
Configure MetalLB as follows so that the peer BGP routers receive one 203.0.113.200/32 route and one fc00:f853:ccd:e799::1/128 route for each load-balancer IP address that MetalLB assigns to a service. Because the localPref and communities fields are not specified, the routes are advertised with localPref set to zero and no BGP communities.

Example: Advertise a basic address pool configuration with BGP
Configure MetalLB as follows so that the IPAddressPool is advertised with the BGP protocol.

Install the OpenShift CLI (oc).

Log in as a user with cluster-admin privileges.


Create an IP address pool.

Create a BGP advertisement.
Configuring MetalLB with a BGP advertisement and an advanced use case
Configure MetalLB as follows so that MetalLB assigns IP addresses to load-balancer services in the ranges between 203.0.113.200 and 203.0.113.203 and between fc00:f853:ccd:e799::0 and fc00:f853:ccd:e799::f.

To explain the two BGP advertisements, consider an instance when MetalLB assigns the IP address of 203.0.113.200 to a service. With that IP address as an example, the speaker advertises two routes to BGP peers:

203.0.113.200/32, with localPref set to 100 and the community set to the numeric value of the NO_ADVERTISE community.
This specification indicates to the peer routers that they can use this route but they should not propagate information about this route to BGP peers.

203.0.113.200/30, aggregates the load-balancer IP addresses assigned by MetalLB into a single route.
MetalLB advertises the aggregated route to BGP peers with the community attribute set to 8000:800.
BGP peers propagate the 203.0.113.200/30 route to other BGP peers.
When traffic is routed to a node with a speaker, the 203.0.113.200/32 route is used to forward the traffic into the cluster and to a pod that is associated with the service.


As you add more services and MetalLB assigns more load-balancer IP addresses from the pool, peer routers receive one local route, 203.0.113.20x/32, for each service, as well as the 203.0.113.200/30 aggregate route. Each service that you add generates the /30 route, but MetalLB deduplicates the routes to one BGP advertisement before communicating with peer routers.

Example: Advertise an advanced address pool configuration with BGP
Configure MetalLB as follows so that the IPAddressPool is advertised with the BGP protocol.

Install the OpenShift CLI (oc).

Log in as a user with cluster-admin privileges.


Create an IP address pool.

Create a BGP advertisement.
Advertising an IP address pool from a subset of nodes
To advertise an IP address from an IP addresses pool, from a specific set of nodes only, use the .spec.nodeSelector specification in the BGPAdvertisement custom resource. This specification associates a pool of IP addresses with a set of nodes in the cluster. This is useful when you have nodes on different subnets in a cluster and you want to advertise an IP addresses from an address pool from a specific subnet, for example a public-facing subnet only.

Install the OpenShift CLI (oc).

Log in as a user with cluster-admin privileges.


Create an IP address pool by using a custom resource:

Control which nodes in the cluster the IP address from pool1 advertises from by defining the .spec.nodeSelector value in the BGPAdvertisement custom resource:


In this example, the IP address from pool1 advertises from NodeA and NodeB only.
About the L2Advertisement custom resource
The fields for the l2Advertisements object are defined in the following table:
Configuring MetalLB with an L2 advertisement
Configure MetalLB as follows so that the IPAddressPool is advertised with the L2 protocol.

Install the OpenShift CLI (oc).

Log in as a user with cluster-admin privileges.


Create an IP address pool.

Create a L2 advertisement.
Configuring MetalLB with a L2 advertisement and label
The ipAddressPoolSelectors field in the BGPAdvertisement and L2Advertisement custom resource definitions is used to associate the IPAddressPool to the advertisement based on the label assigned to the IPAddressPool instead of the name itself.

This example shows how to configure MetalLB so that the IPAddressPool is advertised with the L2 protocol by configuring the ipAddressPoolSelectors field.

Install the OpenShift CLI (oc).

Log in as a user with cluster-admin privileges.


Create an IP address pool.

Create a L2 advertisement advertising the IP using ipAddressPoolSelectors.
Configuring MetalLB with an L2 advertisement for selected interfaces
By default, the IP addresses from IP address pool that has been assigned to the service, is advertised from all the network interfaces. The interfaces field in the L2Advertisement custom resource definition is used to restrict those network interfaces that advertise the IP address pool.

This example shows how to configure MetalLB so that the IP address pool is advertised only from the network interfaces listed in the interfaces field of all nodes.

You have installed the OpenShift CLI (oc).

You are logged in as a user with cluster-admin privileges.


Create an IP address pool.

Create a L2 advertisement advertising the IP with interfaces selector.


The interface selector does not affect how MetalLB chooses the node to announce a given IP by using L2. The chosen node does not announce the service if the node does not have the selected interface.
Additional resources
Configuring a community alias.