Troubleshooting logging alerts

You can use the following procedures to troubleshoot logging alerts on your cluster.
Elasticsearch cluster health status is red
At least one primary shard and its replicas are not allocated to a node. Use the following procedure to troubleshoot this alert.

Some commands in this documentation reference an Elasticsearch pod by using a $ES_POD_NAME shell variable. If you want to copy and paste the commands directly from this documentation, you must set this variable to a value that is valid for your Elasticsearch cluster.

You can list the available Elasticsearch pods by running the following command:

$ oc -n openshift-logging get pods -l component=elasticsearch
Choose one of the pods listed and set the $ES_POD_NAME variable, by running the following command:

$ export ES_POD_NAME=<elasticsearch_pod_name>
You can now use the $ES_POD_NAME variable in commands.
Check the Elasticsearch cluster health and verify that the cluster status is red by running the following command:

List the nodes that have joined the cluster by running the following command:

List the Elasticsearch pods and compare them with the nodes in the command output from the previous step, by running the following command:

If some of the Elasticsearch nodes have not joined the cluster, perform the following steps.

If all the nodes have joined the cluster, check if the cluster is in the process of recovering by running the following command and observing the output:

Check if there are pending tasks by running the following command and observing the output:

If there are pending tasks, monitor their status. If their status changes and indicates that the cluster is recovering, continue waiting. The recovery time varies according to the size of the cluster and other factors. Otherwise, if the status of the pending tasks does not change, this indicates that the recovery has stalled.

If it seems like the recovery has stalled, check if the cluster.routing.allocation.enable value is set to none, by running the following command and observing the output:

If the cluster.routing.allocation.enable value is set to none, set it to all, by running the following command:

Check if any indices are still red by running the following command and observing the output:

If any indices are still red, try to clear them by performing the following steps.

If the preceding steps do not clear the red indices, delete the indices individually.

If there are no red indices and the cluster status is red, check for a continuous heavy processing load on a data node.


Reviewing monitoring dashboards

Fix a red or yellow cluster status
Elasticsearch cluster health status is yellow
Replica shards for at least one primary shard are not allocated to nodes. Increase the node count by adjusting the nodeCount value in the ClusterLogging custom resource (CR).

Fix a red or yellow cluster status
Elasticsearch node disk low watermark reached
Elasticsearch does not allocate shards to nodes that reach the low watermark.

Some commands in this documentation reference an Elasticsearch pod by using a $ES_POD_NAME shell variable. If you want to copy and paste the commands directly from this documentation, you must set this variable to a value that is valid for your Elasticsearch cluster.

You can list the available Elasticsearch pods by running the following command:

$ oc -n openshift-logging get pods -l component=elasticsearch
Choose one of the pods listed and set the $ES_POD_NAME variable, by running the following command:

$ export ES_POD_NAME=<elasticsearch_pod_name>
You can now use the $ES_POD_NAME variable in commands.
Identify the node on which Elasticsearch is deployed by running the following command:

Check if there are unassigned shards by running the following command:

If there are unassigned shards, check the disk space on each node, by running the following command:

In the command output, check the Use column to determine the used disk percentage on that node.

To check the current redundancyPolicy, run the following command:

If the preceding steps do not fix the issue, delete the old indices.
Elasticsearch node disk high watermark reached
Elasticsearch attempts to relocate shards away from a node that has reached the high watermark to a node with low disk usage that has not crossed any watermark threshold limits.

To allocate shards to a particular node, you must free up some space on that node. If increasing the disk space is not possible, try adding a new data node to the cluster, or decrease the total cluster redundancy policy.

Some commands in this documentation reference an Elasticsearch pod by using a $ES_POD_NAME shell variable. If you want to copy and paste the commands directly from this documentation, you must set this variable to a value that is valid for your Elasticsearch cluster.

You can list the available Elasticsearch pods by running the following command:

$ oc -n openshift-logging get pods -l component=elasticsearch
Choose one of the pods listed and set the $ES_POD_NAME variable, by running the following command:

$ export ES_POD_NAME=<elasticsearch_pod_name>
You can now use the $ES_POD_NAME variable in commands.
Identify the node on which Elasticsearch is deployed by running the following command:

Check the disk space on each node:

Check if the cluster is rebalancing:

Increase the disk space on all nodes. If increasing the disk space is not possible, try adding a new data node to the cluster, or decrease the total cluster redundancy policy.

To check the current redundancyPolicy, run the following command:

If the preceding steps do not fix the issue, delete the old indices.
Elasticsearch node disk flood watermark reached
Elasticsearch enforces a read-only index block on every index that has both of these conditions:

One or more shards are allocated to the node.

One or more disks exceed the flood stage.


Use the following procedure to troubleshoot this alert.

Some commands in this documentation reference an Elasticsearch pod by using a $ES_POD_NAME shell variable. If you want to copy and paste the commands directly from this documentation, you must set this variable to a value that is valid for your Elasticsearch cluster.

You can list the available Elasticsearch pods by running the following command:

$ oc -n openshift-logging get pods -l component=elasticsearch
Choose one of the pods listed and set the $ES_POD_NAME variable, by running the following command:

$ export ES_POD_NAME=<elasticsearch_pod_name>
You can now use the $ES_POD_NAME variable in commands.
Get the disk space of the Elasticsearch node:

In the command output, check the Avail column to determine the free disk space on that node.

Increase the disk space on all nodes. If increasing the disk space is not possible, try adding a new data node to the cluster, or decrease the total cluster redundancy policy.

To check the current redundancyPolicy, run the following command:

If the preceding steps do not fix the issue, delete the old indices.

Continue freeing up and monitoring the disk space. After the used disk space drops below 90%, unblock writing to this node by running the following command:
Elasticsearch JVM heap usage is high
The Elasticsearch node Java virtual machine (JVM) heap memory used is above 75%. Consider increasing the heap size.
Aggregated logging system CPU is high
System CPU usage on the node is high. Check the CPU of the cluster node. Consider allocating more CPU resources to the node.
Elasticsearch process CPU is high
Elasticsearch process CPU usage on the node is high. Check the CPU of the cluster node. Consider allocating more CPU resources to the node.
Elasticsearch disk space is running low
Elasticsearch is predicted to run out of disk space within the next 6 hours based on current disk usage. Use the following procedure to troubleshoot this alert.

Get the disk space of the Elasticsearch node:

In the command output, check the Avail column to determine the free disk space on that node.

Increase the disk space on all nodes. If increasing the disk space is not possible, try adding a new data node to the cluster, or decrease the total cluster redundancy policy.

To check the current redundancyPolicy, run the following command:

If the preceding steps do not fix the issue, delete the old indices.


Fix a red or yellow cluster status
Elasticsearch FileDescriptor usage is high
Based on current usage trends, the predicted number of file descriptors on the node is insufficient. Check the value of max_file_descriptors for each node as described in the Elasticsearch File Descriptors documentation.