Creating a performance profile

Learn about the Performance Profile Creator (PPC) and how you can use it to create a performance profile.

Currently, disabling CPU load balancing is not supported by cgroup v2. As a result, you might not get the desired behavior from performance profiles if you have cgroup v2 enabled. Enabling cgroup v2 is not recommended if you are using performance profiles.
About the Performance Profile Creator
The Performance Profile Creator (PPC) is a command-line tool, delivered with the Node Tuning Operator, used to create the performance profile. The tool consumes must-gather data from the cluster and several user-supplied profile arguments. The PPC generates a performance profile that is appropriate for your hardware and topology.

The tool is run by one of the following methods:

Invoking podman

Calling a wrapper script


Gathering data about your cluster using the must-gather command
The Performance Profile Creator (PPC) tool requires must-gather data. As a cluster administrator, run the must-gather command to capture information about your cluster.

Access to the cluster as a user with the cluster-admin role.

The OpenShift CLI (oc) installed.


Optional: Verify that a matching machine config pool exists with a label:

If a matching label does not exist add a label for a machine config pool (MCP) that matches with the MCP name:

Navigate to the directory where you want to store the must-gather data.

Collect cluster information by running the following command:

Optional: Create a compressed file from the must-gather directory:
Running the Performance Profile Creator using podman
As a cluster administrator, you can run podman and the Performance Profile Creator to create a performance profile.

Access to the cluster as a user with the cluster-admin role.

A cluster installed on bare-metal hardware.

A node with podman and OpenShift CLI (oc) installed.

Access to the Node Tuning Operator image.


Check the machine config pool:

Use Podman to authenticate to registry.redhat.io:

Optional: Display help for the PPC tool:

Run the Performance Profile Creator tool in discovery mode:

Run podman:

Review the created YAML file:

Apply the generated profile:


How to run podman to create a performance profile
The following example illustrates how to run podman to create a performance profile with 20 reserved CPUs that are to be split across the NUMA nodes.

Node hardware configuration:

80 CPUs

Hyperthreading enabled

Two NUMA nodes

Even numbered CPUs run on NUMA node 0 and odd numbered CPUs run on NUMA node 1


Run podman to create the performance profile:

$ podman run --entrypoint performance-profile-creator -v /must-gather:/must-gather:z registry.redhat.io/openshift4/ose-cluster-node-tuning-operator:v{product-version} --mcp-name=worker-cnf --reserved-cpu-count=20 --rt-kernel=true --split-reserved-cpus-across-numa=true --must-gather-dir-path /must-gather > my-performance-profile.yaml
The created profile is described in the following YAML:

  apiVersion: performance.openshift.io/v2
  kind: PerformanceProfile
  metadata:
    name: performance
  spec:
    cpu:
      isolated: 10-39,50-79
      reserved: 0-9,40-49
    nodeSelector:
      node-role.kubernetes.io/worker-cnf: ""
    numa:
      topologyPolicy: restricted
    realTimeKernel:
      enabled: true
In this case, 10 CPUs are reserved on NUMA node 0 and 10 are reserved on NUMA node 1.
Running the Performance Profile Creator wrapper script
The performance profile wrapper script simplifies the running of the Performance Profile Creator (PPC) tool. It hides the complexities associated with running podman and specifying the mapping directories and it enables the creation of the performance profile.

Access to the Node Tuning Operator image.

Access to the must-gather tarball.


Create a file on your local machine named, for example, run-perf-profile-creator.sh:

Paste the following code into the file:

Add execute permissions for everyone on this script:

Optional: Display the run-perf-profile-creator.sh command usage:

Run the performance profile creator tool in discovery mode:

Check the machine config pool:

Create a performance profile:

Review the created YAML file:

Apply the generated profile:
Performance Profile Creator arguments
Reference performance profiles
A performance profile template for clusters that use OVS-DPDK on OpenStack
To maximize machine performance in a cluster that uses Open vSwitch with the Data Plane Development Kit (OVS-DPDK) on Red Hat OpenStack Platform (RHOSP), you can use a performance profile.

You can use the following performance profile template to create a profile for your deployment.

apiVersion: performance.openshift.io/v2
kind: PerformanceProfile
metadata:
  name: cnf-performanceprofile
spec:
  additionalKernelArgs:
    - nmi_watchdog=0
    - audit=0
    - mce=off
    - processor.max_cstate=1
    - idle=poll
    - intel_idle.max_cstate=0
    - default_hugepagesz=1GB
    - hugepagesz=1G
    - intel_iommu=on
  cpu:
    isolated: <CPU_ISOLATED>
    reserved: <CPU_RESERVED>
  hugepages:
    defaultHugepagesSize: 1G
    pages:
      - count: <HUGEPAGES_COUNT>
        node: 0
        size: 1G
  nodeSelector:
    node-role.kubernetes.io/worker: ''
  realTimeKernel:
    enabled: false
    globallyDisableIrqLoadBalancing: true
Insert values that are appropriate for your configuration for the CPU_ISOLATED, CPU_RESERVED, and HUGEPAGES_COUNT keys.

To learn how to create and use performance profiles, see the "Creating a performance profile" page in the "Scalability and performance" section of the "Red Hat OpenShift Container Platform" documentation.
Additional resources
For more information about the must-gather tool,
see Gathering data about your cluster.